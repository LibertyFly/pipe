function terminal_fac_total()
{
    local _time=$1
    local _id=$2
    set_total
    local shellCmd="$grepFile"
    if [ "$muti" -eq 1 ];then
         create_muti_file   "$shellCmd"
         shellCmd="cat $muti_tmp_file|awk -f $AWK_FOLD/muti_users_v1.awk |sort -nr -k4"
    fi
    echo $shellCmd|sh|\
    awk  -v time=$_time -v id=$_id \
         -v zd_terminal_fac=$TERMINAL_FAC_ZIDIAN  \
         -v t_up=$total_up -v t_down=$total_down -v t_total=$total_total -v t_user_count=$total_user_count  \
         -v key_cnt=1 \
        'BEGIN{while((getline<zd_terminal_fac)>0){terminal_fac[$1]=$2}}\
         { \
                _terminal_fac_id=$1;\
                _terminal_fac=((terminal_fac[$1]=="")?$1:terminal_fac[$1]);\
                _up_bytes=$(key_cnt+1);\
                _up_bytes_rate=(t_up==0?0:_up_bytes*100/t_up);\
                _down_bytes=$(key_cnt+2);\
                _down_bytes_rate=(t_down==0?0:_down_bytes*100/t_down);\
                _total_bytes=$(key_cnt+3);\
                _total_bytes_rate=(t_total==0?0:_total_bytes*100/t_total);\
                _user_count=$(key_cnt+6);\
		_user_count_rate=(t_user_count==0?0:_user_count*100/t_user_count);\
                printf time","id",";\
                printf("%s,%s,%d,%d,%d,%.3f,%.3f,%.3f,%d,%.3f\n",_terminal_fac_id,_terminal_fac,\
                _up_bytes,_down_bytes,_total_bytes,_up_bytes_rate,_down_bytes_rate,_total_bytes_rate,\
		_user_count,_user_count_rate);\
          }' \
     >> $RESULT_FOLD/$FILE_NAME
}

function terminal_type_total()
{
    local _time=$1
    local _id=$2
    local _key_cnt=0
    case  $apercent  in
      "total") set_total ;;
      "terminal_fac")  set_terminal_fac  ;;
      *)  set_total ;;
    esac
    local shellCmd="$grepFile"
    if [ "$muti" -eq 1 ];then
        if [ "${detail}" -eq 1 ];then
           shellCmd="cat $muti_tmp_file|awk   -f ${AWK_FOLD}/muti_users_v3.awk|sed 's/_/ /g'"   
           _key_cnt=2
        else
         create_muti_file   "$shellCmd"
         shellCmd="cat $muti_tmp_file|awk -f $AWK_FOLD/muti_users_v2.awk |sort -nr -k5"
	fi
    fi
    echo $shellCmd|sh|\
    awk  -v time=$_time -v id=$_id \
         -v zd_terminal_type=$TERMINAL_TYPE_ZIDIAN  \
         -v t_up=$total_up -v t_down=$total_down -v t_total=$total_total -v t_user_count=$total_user_count  \
         -v key_cnt=${_key_cnt} \
        'BEGIN{while((getline<zd_terminal_type)>0){terminal_type[$2]=$3}}\
         { \
		if(key_cnt==2){_time=$1;_id=$2;}else{_time=time;_id=id;}\
                _terminal_fac_id=$(key_cnt+1);\
		_terminal_type_id=$(key_cnt+2);\
                _terminal_type=((terminal_type[$(key_cnt+2)]=="")?$(key_cnt+2):terminal_type[$(key_cnt+2)]);\
                _up_bytes=$(key_cnt+3);\
                _up_bytes_rate=(t_up==0?0:_up_bytes*100/t_up);\
                _down_bytes=$(key_cnt+4);\
                _down_bytes_rate=(t_down==0?0:_down_bytes*100/t_down);\
                _total_bytes=$(key_cnt+5);\
                _total_bytes_rate=(t_total==0?0:_total_bytes*100/t_total);\
                _user_count=$(key_cnt+8);\
                _user_count_rate=(t_user_count==0?0:_user_count*100/t_user_count);\
                printf _time","_id",";\
                printf("%s,%s,%s,%d,%d,%d,%.3f,%.3f,%.3f,%d,%.3f\n",_terminal_fac_id,_terminal_type_id,_terminal_type,\
                _up_bytes,_down_bytes,_total_bytes,_up_bytes_rate,_down_bytes_rate,_total_bytes_rate,\
		_user_count,_user_count_rate);\
          }' \
     >> $RESULT_FOLD/$FILE_NAME
}


function terminal_service_group_total()
{

   local _time=$1
   local _id=$2
   local _key_cnt=0
     case  $apercent  in
      "total") set_total ;;
      "service_group")  set_service_group   ;;
      "terminal_type")  set_terminal_type   ;;
      *)  set_total ;;
    esac
    #local shellCmd="$grepFile"
	local shellCmd="$grepFile"
    if [ "$muti" -eq 1 ];then
        if [ "${detail}" -eq 1 ];then
           shellCmd="cat $muti_tmp_file|awk   -f ${AWK_FOLD}/muti_users_v3.awk|sed 's/_/ /g'"   
           _key_cnt=2
        else
         create_muti_file   "$shellCmd"
         shellCmd="cat $muti_tmp_file|awk -f $AWK_FOLD/muti_users_v2.awk |sort -nr -k5"
       fi
    fi
    echo $shellCmd|sh|\
    awk  -v time=$_time -v id=$_id \
	 -v zd_service_group=$SERVICE_GROUP_ZIDIAN \
         -v zd_terminal_type=$TERMINAL_TYPE_ZIDIAN  \
         -v t_up=$total_up -v t_down=$total_down -v t_total=$total_total -v t_msg_count=$total_msg_count  \
         -v key_cnt=${_key_cnt} \
        'BEGIN{ while((getline<zd_service_group)>0){service_group[$1]=$2} \
		while((getline<zd_terminal_type)>0){terminal_type[$2]=$3}}\
         { \
		if(key_cnt==2){_time=$1;_id=$2;}else{_time=time;_id=id;}\
                _terminal_type_id=$(key_cnt+1);\
                _terminal_type=((terminal_type[$(key_cnt+1)]=="")?$(key_cnt+1):terminal_type[$(key_cnt+1)]);\
		_service_group_id=$(key_cnt+2);\
		_service_group=((service_group[$(key_cnt+2)]=="")?$(key_cnt+2):service_group[$(key_cnt+2)]);\
                _up_bytes=$(key_cnt+3);\
                _up_bytes_rate=(t_up==0?0:_up_bytes*100/t_up);\
                _down_bytes=$(key_cnt+4);\
                _down_bytes_rate=(t_down==0?0:_down_bytes*100/t_down);\
                _total_bytes=$(key_cnt+5);\
                _total_bytes_rate=(t_total==0?0:_total_bytes*100/t_total);\
                _msg_count=$(key_cnt+6);\
                _msg_count_rate=(t_msg_count==0?0:_msg_count*100/t_msg_count);\
		_user_count=$(key_cnt+8);\
                printf _time","_id",";\
                printf("%s,%s,%s,%s,%d,%d,%d,%.3f,%.3f,%.3f,%d,%.3f,%d\n",_terminal_type_id,_terminal_type,\
		_service_group_id,_service_group,\
                _up_bytes,_down_bytes,_total_bytes,_up_bytes_rate,_down_bytes_rate,_total_bytes_rate,\
		_msg_count,_msg_count_rate,_user_count);\
          }' \
     >> $RESULT_FOLD/$FILE_NAME
}

function terminal_service_type_total()
{
   local _time=$1
   local _id=$2
   local _key_cnt=0
     case  $apercent  in
      "total") set_total ;;
      "service_type")  set_service_type  ;;
      "terminal_fac")  set_terminal_fac  ;;
      "terminal_type_service_group")  set_terminal_service_group   ;;
      *)  set_total ;;
    esac
    #local shellCmd="$grepFile"
	local shellCmd="$grepFile"
    if [ "$muti" -eq 1 ];then
        if [ "${detail}" -eq 1 ];then
           shellCmd="cat $muti_tmp_file|awk   -f ${AWK_FOLD}/muti_users_v4.awk|sed 's/_/ /g'"   
           _key_cnt=2
        else
         create_muti_file   "$shellCmd"
         shellCmd="cat $muti_tmp_file|awk -f $AWK_FOLD/muti_users_v3.awk |sort -nr -k6"
	fi
    fi
    echo $shellCmd|sh|\
    awk  -v time=$_time -v id=$_id \
         -v zd_service_type=$SERVICE_TYPE_ZIDIAN \
         -v zd_terminal_type=$TERMINAL_TYPE_ZIDIAN  \
         -v t_up=$total_up -v t_down=$total_down -v t_total=$total_total -v t_msg_count=$total_msg_count  \
         -v key_cnt=${_key_cnt} \
        'BEGIN{ while((getline<zd_service_type)>0){service_type[$2]=$3 }\
                while((getline<zd_terminal_type)>0){terminal_type[$2]=$3}}\
         { \
		if(key_cnt==2){_time=$1;_id=$2;}else{_time=time;_id=id;}\
                _terminal_type_id=$(key_cnt+1);\
                _terminal_type=((terminal_type[$(key_cnt+1)]=="")?$(key_cnt+1):terminal_type[$(key_cnt+1)]);\
                _service_group_id=$(key_cnt+2);\
		_service_type_id=$(key_cnt+3);\
                _service_type=((service_type[$(key_cnt+3)]=="")?$(key_cnt+3):service_type[$(key_cnt+3)]);\
                _up_bytes=$(key_cnt+4);\
                _up_bytes_rate=(t_up==0?0:_up_bytes*100/t_up);\
                _down_bytes=$(key_cnt+5);\
                _down_bytes_rate=(t_down==0?0:_down_bytes*100/t_down);\
                _total_bytes=$(key_cnt+6);\
                _total_bytes_rate=(t_total==0?0:_total_bytes*100/t_total);\
                _msg_count=$(key_cnt+7);\
                _msg_count_rate=(t_msg_count==0?0:_msg_count*100/t_msg_count);\
                _user_count=$(key_cnt+9);\
                printf _time","_id",";\
                printf("%s,%s,%s,%s,%d,%d,%d,%.3f,%.3f,%.3f,%d,%.3f,%d\n",_terminal_type_id,_terminal_type,\
                _service_group_id,_service_type,\
                _up_bytes,_down_bytes,_total_bytes,_up_bytes_rate,_down_bytes_rate,_total_bytes_rate,\
                _msg_count,_msg_count_rate,_user_count);\
          }' \
     >> $RESULT_FOLD/$FILE_NAME
}

