AWK_FOLD="/usr/local/functionlib/awk"
HEAD_FOLD="$ROOT_FOLD/head"
RESULT_FOLD="$ROOT_FOLD/tmp_result"
ZIP_FOLD="$ROOT_FOLD/zipfile"
INDEX_FOLD="$ROOT_FOLD/index"
ZIDIAN_FOLD="$ROOT_FOLD/zidian"
DB_FILE="/var/www/conf/data.db"

now=$(date  +%s);
ssid=${now}$$
FILE_NAME=${ssid}.txt

# Query param split .
# Only for 3 types and every type for many param.
# For example : -p a,b,c#1,3,4#A,B,C

param=""
expr1=""
expr2=""
expr3=""
function set_expr()
{
  if [[ $param != ""  ]];then
        vars=(${param//#/ });
        param1=${vars[0]}
        param2=${vars[1]}
        param3=${vars[2]}
     if [[ $param1 != ""  ]];then
        params=(${param1//,/ });
        len=${#params[*]}
        if [[ $len == 1 ]];then
            expr1="${expr1} ${params[0]} |^${params[0]} "
        else
           for ((m=0;m<$((len-1));m++));do
               expr1="${expr1} ${params[m]} |^${params[m]} |"
           done
           expr1="${expr1} ${params[$((len-1))]} |^${params[$((len-1))]} "
       fi
    fi
    if [[ $param2 != ""  ]];then
       params=(${param2//,/ });
        len=${#params[*]}
        if [[ $len == 1 ]];then
            expr2="${expr2} ${params[0]} |^${params[0]} "
        else
           for ((m=0;m<$((len-1));m++));do
               expr2="${expr2} ${params[m]} |^${params[m]} |"
           done
           expr2="${expr2} ${params[$((len-1))]} |^${params[$((len-1))]} "
       fi
    fi
    if [[ $param3 != ""  ]];then
       params=(${param3//,/ });
        len=${#params[*]}
        if [[ $len == 1 ]];then
            expr3="${expr3} ${params[0]} |^${params[0]} "
        else
           for ((m=0;m<$((len-1));m++));do
               expr3="${expr3} ${params[m]} |^${params[m]} |"
           done
           expr3="${expr3} ${params[$((len-1))]} |^${params[$((len-1))]} "
       fi
    fi
 fi
#for ip filter
 expr1=${expr1//./\\.}
 expr2=${expr2//./\\.}
 expr3=${expr3//./\\.}
}

function set_expr_split()
{
  if [[ $param != ""  ]];then
        vars=(${param//#/ });
        param1=${vars[0]}
        param2=${vars[1]}
        param3=${vars[2]}
     if [[ $param1 != ""  ]];then
        params=(${param1//,/ });
        len=${#params[*]}
        if [[ $len == 1 ]];then
            expr1="${expr1},${params[0]},|^${params[0]},|,${params[0]}$"
        else
           for ((m=0;m<$((len-1));m++));do
               expr1="${expr1},${params[m]},|^${params[m]},|,${params[m]}$|"
           done
           expr1="${expr1},${params[$((len-1))]},|^${params[$((len-1))]},|,${params[$((len-1))]}$"
       fi
    fi
    if [[ $param2 != ""  ]];then
       params=(${param2//,/ });
        len=${#params[*]}
        if [[ $len == 1 ]];then
            expr2="${expr2},${params[0]},|^${params[0]},|,${params[0]}$"
        else
           for ((m=0;m<$((len-1));m++));do
               expr2="${expr2},${params[m]},|^${params[m]},|,${params[m]}$|"
           done
           expr2="${expr2},${params[$((len-1))]},|^${params[$((len-1))]},|,${params[$((len-1))]}$"
       fi
    fi
    if [[ $param3 != ""  ]];then
       params=(${param3//,/ });
        len=${#params[*]}
        if [[ $len == 1 ]];then
            expr3="${expr3},${params[0]},|^${params[0]},|,${params[0]}$"
        else
           for ((m=0;m<$((len-1));m++));do
               expr3="${expr3},${params[m]},|^${params[m]},|,${params[m]}$|"
           done
           expr3="${expr3},${params[$((len-1))]},|^${params[$((len-1))]},|,${params[$((len-1))]}$"
       fi
    fi
 fi
#for ip filter
 expr1=${expr1//./\\.}
 expr2=${expr2//./\\.}
 expr3=${expr3//./\\.}
}
#
# Get Regular Expression for grep data from file
#

grepFile=""
function setGrepFile()
{
    local tmp_source_file
    if [ -z "$1" ];then 
      tmp_source_file=$source_file
    else
      tmp_source_file=$1
    fi
       if [[ "$expr1" == "" &&  "$expr2" == ""  && "$expr3" == "" ]];then
            grepFile="cat $tmp_source_file "
                return;
       fi
       if [[ "$expr1" != "" &&  "$expr2" == "" && "$expr3" == "" ]];then
           grepFile="cat $tmp_source_file |grep -h -E \"$expr1\"  "
                return;
       fi
       if [[ "$expr1" == "" &&  "$expr2" != "" && "$expr3" == "" ]];then
           grepFile="cat $tmp_source_file |grep -h -E \"$expr2\"  "
                return;
       fi
       if [[ "$expr1" == "" &&  "$expr2" == "" && "$expr3" != "" ]];then
          grepFile="cat $tmp_source_file |grep -h -E \"$expr3\"   "
                return;
       fi
       if [[ "$expr1" != "" &&  "$expr2" != ""  && "$expr3" == ""  ]];then
         grepFile="cat $tmp_source_file | grep -h -E \"$expr1\" |grep -h -E \"$expr2\"  "
                return;
       fi
       if [[ "$expr1" != "" &&  "$expr2" == ""  && "$expr3" != ""  ]];then
        grepFile=" cat $tmp_source_file | grep -h -E \"$expr1\" |grep -h -E \"$expr3\" -m $top "
                return;
       fi
       if [[ "$expr1" == "" &&  "$expr2" != ""  && "$expr3" != ""  ]];then
        grepFile=" cat $tmp_source_file | grep -h -E \"$expr2\" |grep -h -E \"$expr3\"  "
                return;
       fi
       if [[ "$expr1" != "" &&  "$expr2" != ""  && "$expr3" != ""  ]];then
        grepFile="cat $tmp_source_file | grep -h -E \"$expr1\"|grep -h -E \"$expr2\" |grep -h -E \"$expr3\" "
                return;
       fi

}



function check_index()
{
   index_file="$INDEX_FOLD/$HEAD_FILE"
   #查询次数
   local query_count=1
   #索引数组（将索引取出放数组）
   local log_array=(1)
   #当前时间
   local now="$( date +%F" "%R  )"
   #根据查询条件获取索引（文件名和查询次数）
   if [  -s $index_file ];then
      log_array=($( awk -F "|" -v qv="$index_str"  '{if($4 == qv) {print $2"  "$3 }}' $index_file ))
   fi
   #是否第一次查询
   if [ ${#log_array[@]} -gt 1 ];then

         result_file_name=${log_array[0]}
         query_count=${log_array[1]}
         query_count=$((query_count+1))
         sed -i '/'"$index_str"'/d' $index_file

        if (( index == 1 )) && [ -s $RESULT_FOLD/$result_file_name ];then
           #使用索引，用原查询结果，并更新索引
           FILE_NAME=$result_file_name
           echo "$now|$result_file_name|$query_count|$index_str" >> $index_file
        else
           #不使用索引，重新查询，查询结果为空，删除
          query;
           if [ -s $RESULT_FOLD/$FILE_NAME ];then
              echo "$now|$FILE_NAME|$query_count|$index_str" >> $index_file
              #删除原来查询结果
              rm -fr $RESULT_FOLD/$result_file_name
           else
              rm -fr $RESULT_FOLD/$FILE_NAME
           fi
        fi
    else
         query;
         if [  -s $RESULT_FOLD/$FILE_NAME ];then
              echo "$now|$FILE_NAME|$query_count|$index_str"  >> $index_file
         else
              rm  -fr  $RESULT_FOLD/$FILE_NAME
         fi
   fi
}


function echo_error()
{
        echo "[{\"error\":\"$1\"}]";
        exit;
}
function check_result_fold()
{
   if [ ! -d $RESULT_FOLD ];then
          mkdir -p $RESULT_FOLD
   fi
   if [ ! -d $INDEX_FOLD ];then
          mkdir -p $INDEX_FOLD
   fi
}
function drop_head_grep()
{
  echo "$grepFile"|awk -F "|head" '{print $1}'
}

function create_tmp_ssid()
{
tmp_now=$(date  +%s);
tmp_ssid=${tmp_now}-$$
}
