muti_tmp_file=$RESULT_FOLD/${ssid}.muti
muti_total_file=$RESULT_FOLD/${ssid}_total.muti

servers=(`cat /usr/local/functionlib/server.conf`)
servers_n=${#servers[*]}
servers_cdr=(`cat /usr/local/functionlib/server_cdr.conf`)
servers_cdr_n=${#servers_cdr[*]}

detail_head_file=""
muti=0
sourcefileCmd=""
shellCmd=""

#--------------------------------------------------
# Deal with  muti total file for percent
#--------------------------------------------------
function create_muti_total_file()
{
  local  shellCommand=$1
   for((i=0;i<$servers_n;i++));do
   {
       ssh root@${servers[$i]} "$shellCommand" > ${muti_total_file}_${i}
   }&
   done
   wait
  for((i=0;i<$servers_n;i++));do
  {
    if [[ `cat  ${muti_total_file}_${i}|grep "there is nodata" ` == ""  ]];then
		cat  ${muti_total_file}_${i} >> ${muti_total_file}
	fi
	rm -fr ${muti_total_file}_${i}
  }
  done
  if [[ -z $muti_total_file ]];then
      rm -fr  ${muti_total_file}
      echo_error  "there is nodata between times";
   fi
}

function create_muti_file()
{
  local  shellCommand=$1
   for((i=0;i<$servers_n;i++));do
   {
#	echo " ssh root@${servers[$i]} \"$shellCommand\" "
       ssh root@${servers[$i]} "$shellCommand" > ${muti_tmp_file}_${i}
   }&
   done
   wait
  for((i=0;i<$servers_n;i++));do
  {
    if [[ `cat  ${muti_tmp_file}_${i}|grep "there is nodata" ` == ""  ]];then
       cat  ${muti_tmp_file}_${i} >> ${muti_tmp_file}
   fi
    rm -fr ${muti_tmp_file}_${i}
  }
  done

  if [[ ! -s $muti_tmp_file ]];then
      rm -fr  ${muti_tmp_file}
      echo_error  "there is nodata between times";
   fi
}
function  set_muti_source_file()
{
  create_muti_file "$1"
  shellCmd="cat $muti_tmp_file"
}
function check_muti()
{
   local cmd=$1
    if [ "$muti" -eq 1 ];then
       set_muti_source_file "$cmd"
   else
       shellCmd=$cmd
   fi
   
}
